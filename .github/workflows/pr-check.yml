name: PR Check

on:
  pull_request:
    types:
      - opened
      - synchronize

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}

      - name: yarn-install
        # Check out the lockfile from main, reinstall, and then
        # verify the lockfile matches what was committed.
        run: |
            yarn install
            CHANGES=$(git status -s)
            if [[ ! -z $CHANGES ]]; then
              echo "Changes found: $CHANGES"
              git diff
              exit 1
            fi

  build:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3

      - name: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}

      - name: build
        run: yarn run build
        env:
          NEXT_PUBLIC_WALLET_CONNECT_ID: ${{ secrets.NEXT_PUBLIC_WALLET_CONNECT_ID }}

  prettier:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3

      - name: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}

      - name: prettier
        run: |
          yarn run prettier
          CHANGES=$(git status -s)
          if [[ ! -z $CHANGES ]]; then
            echo "Changes found: $CHANGES"
            exit 1
          fi

  lint:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3

      - name: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}

      - name: lint 
        run: yarn run lint

  unit-tests:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3

      - name: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}

      - name: test
        run: yarn run test
  smoke-tests-preparation:
    runs-on: ubuntu-latest
    needs: [build]
    outputs:
      vercel_preview_url: ${{ steps.vercel_url.outputs.vercel_preview_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Vercel Preview URL
        id: vercel_url
        run: |
          PREVIEW_URL=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/statuses" \
            | jq -r '.statuses[] | select(.context=="Vercel") | .target_url' | head -n 1)

          echo "Vercel preview URL: $PREVIEW_URL"
          echo "VERCEL_PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV

  run-smoke-test:
    needs: [smoke-tests-preparation]
    uses: mento-protocol/mento-automation-tests/.github/workflows/smoke-mento-web-test.yml@main
    with:
      CUSTOM_URL: ${{ needs.smoke-tests-preparation.outputs.vercel_preview_url }}
      IS_MAINNET: "false"
